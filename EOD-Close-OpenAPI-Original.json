{
	"openapi": "3.0.0",
	"info": {
		"title": "Ground End of Day Close API",
		"version": "1.0.0"
	},
	"servers": [
		{
			"url": "",
			"description": "Sandbox Server"
		},
		{
			"url": "",
			"description": "Production Server"
		}
	],
	"paths": {
		"/ship/v1/endofday/": {
			"put": {
				"description": "Use this endpoint to close the Ground shipments and generate the reports.",
				"operationId": "Ground End Of Day Close",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/FullSchema"
							},
							"examples": {
								"Full-schema": {
									"value": {
										"closeReqType": "GCDR",
										"accountNumber": {
											"value": "Your account number"
										},
										"groundServiceCategory": "GROUND",
										"closeDate": "2020-05-05",
										"closeDocumentSpecification": {
											"closeDocumentTypes": [
												"MANIFEST"
											]
										}
									}
								},
								"Minimum_payload_Ground_EndofDay_Reprint": {
									"value": {
										"accountNumber": {
											"value": "Your account number"
										},
										"closeReqType": "GCDR",
										"closeDate": "2020-07-03",
										"groundServiceCategory": "GROUND"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SHPCResponseVO"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO"
								},
								"example": {
									"transactionId": "35fa49ec-1e8a-4334-abc5-7e640ac807ac",
									"customerTransactionId": "AnyCo_order123456789",
									"errors": [
										{
											"code": "AVAILABILITY.SHIP.DATE.INVALID",
											"message": "Ship date is invalid."
										}
									]
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO401"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"errors": [
										{
											"code": "NOT.AUTHORIZED.ERROR",
											"message": "Access token expired. Please modify your request and try again."
										}
									]
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO403"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"errors": [
										{
											"code": "FORBIDDEN.ERROR",
											"message": "We could not authorize your credentials. Please check your permissions and try again."
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO404"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"errors": [
										{
											"code": "NOT.FOUND.ERROR",
											"message": "The resource you requested is no longer available. Please modify your request and try again."
										}
									]
								}
							}
						}
					},
					"500": {
						"description": "Failure",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO500"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"customerTransactionId": "AnyCo_order123456789",
									"errors": [
										{
											"code": "INTERNAL.SERVER.ERROR",
											"message": "We encountered an unexpected error and are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time."
										}
									]
								}
							}
						}
					},
					"503": {
						"description": "Service Unavailable",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO503"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"customerTransactionId": "AnyCo_order123456789",
									"errors": [
										{
											"code": "SERVICE.UNAVAILABLE.ERROR",
											"message": "Indicates the description of API error alert message.<br>Example: The service is currently unavailable and we are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time."
										}
									]
								}
							}
						}
					}
				},
				"parameters": [
					{
						"in": "header",
						"name": "x-customer-transaction-id",
						"description": "This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply.",
						"required": false,
						"schema": {
							"type": "string",
							"example": "624deea6-b709-470c-8c39-4b5511281492"
						}
					},
					{
						"in": "header",
						"name": "content-type",
						"description": "This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file.",
						"required": true,
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"in": "header",
						"name": "x-locale",
						"description": "This indicates the combination of language code and country code.  <a onclick='loadDocReference(\"locales\")'>Click here to see Locales</a>",
						"required": false,
						"schema": {
							"type": "string",
							"example": "en_US"
						}
					},
					{
						"in": "header",
						"name": "authorization",
						"description": "This indicates the authorization token for the input request.",
						"required": true,
						"schema": {
							"type": "string",
							"example": "Bearer XXX"
						}
					}
				],
				"x-code-samples": [
					{
						"lang": "C#",
						"source": "var client = new RestClient(\"https://apis-sandbox.fedex.com/ship/v1/endofday/\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"Authorization\", \"Bearer \");\nrequest.AddHeader(\"X-locale\", \"en_US\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\n// 'input' refers to JSON Payload\nrequest.AddParameter(\"undefined\", input, ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
					},
					{
						"lang": "JAVA",
						"source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\n// 'input' refers to JSON Payload\nRequestBody body = RequestBody.create(mediaType, input);\nRequest request = new Request.Builder()\n  .url(\"https://apis-sandbox.fedex.com/ship/v1/endofday/\")\n  .put(body)\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"X-locale\", \"en_US\")\n  .addHeader(\"Authorization\", \"Bearer \")\n  .build();\n\nResponse response = client.newCall(request).execute();"
					},
					{
						"lang": "JAVASCRIPT",
						"source": "// 'input' refers to JSON Payload\nvar data = JSON.stringify(input);\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"PUT\", \"https://apis-sandbox.fedex.com/ship/v1/endofday/\");\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n  xhr.setRequestHeader(\"X-locale\", \"en_US\");\n  xhr.setRequestHeader(\"Authorization\", \"Bearer \");\n  \n  xhr.send(data);"
					},
					{
						"lang": "PHP",
						"source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://apis-sandbox.fedex.com/ship/v1/endofday/');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'Authorization' => 'Bearer ',\n  'X-locale' => 'en_US',\n  'Content-Type' => 'application/json'\n));\n\n$request->setBody(input); // 'input' refers to JSON Payload\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
					},
					{
						"lang": "PYTHON",
						"source": "import requests\n\nurl = \"https://apis-sandbox.fedex.com/ship/v1/endofday/\"\n\npayload = input # 'input' refers to JSON Payload\nheaders = {\n    'Content-Type': \"application/json\",\n    'X-locale': \"en_US\",\n    'Authorization': \"Bearer \"\n    }\n\nresponse = requests.request(\"PUT\", url, data=payload, headers=headers)\n\nprint(response.text)"
					},
					{
						"lang": "RUST",
						"source": "extern crate reqwest;\n\nuse std::io::Read;\n\nfn construct_headers() -> HeaderMap {\n    let mut headers = HeaderMap::new();\n    headers.insert(\"Content-Type\", \"application/json\");\n    headers.insert(\"X-locale\", \"en_US\");\n    headers.insert(\"Authorization\", \"Bearer \");\n    headers\n}\n\nfn run() -> Result<()> {\n    let client = reqwest::Client::new();\n    let mut res = client.put(\"https://apis-sandbox.fedex.com/ship/v1/endofday/\")\n        .body(input) // 'input' refers to JSON Payload\n        .headers(construct_headers())\n        .send()?;\n    let mut body = String::new();\n    res.read_to_string(&mut body)?;\n\n    println!(\"Status: {}\", res.status());\n    println!(\"Headers:\\n{:#?}\", res.headers());\n    println!(\"Body:\\n{}\", body);\n\n    Ok(())\n}"
					},
					{
						"lang": "SWIFT",
						"source": "import Foundation\n\nlet headers = [\n  \"Content-Type\": \"application/json\",\n  \"X-locale\": \"en_US\",\n  \"Authorization\": \"Bearer \"\n]\nlet parameters = [\n  input // 'input' refers to JSON Payload\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://apis-sandbox.fedex.com/ship/v1/endofday/\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"PUT\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
					}
				]
			},
			"post": {
				"description": "Use this endpoint to reprint the closed Ground shipments reports.",
				"operationId": "Reprint End Of Day",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/FullSchema"
							},
							"examples": {
								"Full-schema": {
									"value": {
										"closeReqType": "RGCDR",
										"accountNumber": {
											"value": "Your account number"
										},
										"groundServiceCategory": "GROUND",
										"closeDate": "2020-05-05",
										"trackingNumber": "794967542946",
										"reprintOption": "BY_SHIP_DATE",
										"closeDocumentSpecification": {
											"closeDocumentTypes": [
												"MANIFEST"
											]
										}
									}
								},
								"Minimum_payload_Ground_EndofDay_Reprint": {
									"value": {
										"closeReqType": "RGCDR",
										"reprintOption": "BY_SHIP_DATE",
										"groundServiceCategory": "GROUND",
										"accountNumber": {
											"value": "Your account number"
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SHPCResponseVO"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO"
								},
								"example": {
									"transactionId": "35fa49ec-1e8a-4334-abc5-7e640ac807ac",
									"customerTransactionId": "AnyCo_order123456789",
									"errors": [
										{
											"code": "AVAILABILITY.SHIP.DATE.INVALID",
											"message": "Ship date is invalid."
										}
									]
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO401"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"errors": [
										{
											"code": "NOT.AUTHORIZED.ERROR",
											"message": "Access token expired. Please modify your request and try again."
										}
									]
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO403"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"errors": [
										{
											"code": "FORBIDDEN.ERROR",
											"message": "We could not authorize your credentials. Please check your permissions and try again."
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO404"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"errors": [
										{
											"code": "NOT.FOUND.ERROR",
											"message": "The resource you requested is no longer available. Please modify your request and try again."
										}
									]
								}
							}
						}
					},
					"500": {
						"description": "Failure",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO500"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"customerTransactionId": "AnyCo_order123456789",
									"errors": [
										{
											"code": "INTERNAL.SERVER.ERROR",
											"message": "We encountered an unexpected error and are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time."
										}
									]
								}
							}
						}
					},
					"503": {
						"description": "Service Unavailable",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO503"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"customerTransactionId": "AnyCo_order123456789",
									"errors": [
										{
											"code": "SERVICE.UNAVAILABLE.ERROR",
											"message": "The service is currently unavailable and we are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time."
										}
									]
								}
							}
						}
					}
				},
				"parameters": [
					{
						"in": "header",
						"name": "x-customer-transaction-id",
						"description": "This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply.",
						"required": false,
						"schema": {
							"type": "string",
							"example": "624deea6-b709-470c-8c39-4b5511281492"
						}
					},
					{
						"in": "header",
						"name": "content-type",
						"description": "This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file.",
						"required": true,
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"in": "header",
						"name": "x-locale",
						"description": "This indicates the combination of language code and country code.  <a onclick='loadDocReference(\"locales\")'>Click here to see Locales</a>",
						"required": false,
						"schema": {
							"type": "string",
							"example": "en_US"
						}
					},
					{
						"in": "header",
						"name": "authorization",
						"description": "This indicates the authorization token for the input request.",
						"required": true,
						"schema": {
							"type": "string",
							"example": "Bearer XXX"
						}
					}
				]
			}
		}
	},
	"components": {
		"schemas": {
			"FullSchema": {
				"type": "object",
				"properties": {
					"closeReqType": {
						"type": "string",
						"description": "Specify the close request type to initiate processing of shipment data.For ground close the closeReqType is GCDR and for Reprint EndofDay the applicable value is RGCDR.",
						"example": "GCDR",
						"enum": [
							"GCDR",
							"RGCDR"
						]
					},
					"accountNumber": {
						"$ref": "#/components/schemas/AccountNumber_2"
					},
					"groundServiceCategory": {
						"type": "string",
						"description": "This is to specify FedEx ground category for which the shipment to be submitted for end of the day closing.",
						"example": "GROUND",
						"enum": [
							"SMARTPOST",
							"GROUND"
						]
					},
					"closeDate": {
						"type": "string",
						"description": "Indicates the close date. <br> Example: 2020-05-05",
						"example": "2020-05-05"
					},
					"trackingNumber": {
						"type": "string",
						"description": "Specify the tracking number for reprinting the report.It is only applicable for reprint EndofDay and its not applicable for ground EndofDay close endpoint. <br> Example: 7XX96XX42946",
						"example": "794967542946"
					},
					"reprintOption": {
						"type": "string",
						"description": "Specify the reprint option to generate report. Either by close date or a tracking number.It is only applicable for reprint EndofDay and its not applicable for ground EndofDay close endpoint.",
						"example": "BY_SHIP_DATE",
						"enum": [
							"BY_SHIP_DATE",
							"BY_TRACKING_NUMBER"
						]
					},
					"closeDocumentSpecification": {
						"$ref": "#/components/schemas/CloseDocumentSpecification"
					}
				}
			},
			"AccountNumber_2": {
				"description": "Specify the FedEx Account number. <br>Example: Your account number",
				"allOf": [
					{
						"$ref": "#/components/schemas/CloseAccountNumber"
					}
				]
			},
			"CloseAccountNumber": {
				"type": "object",
				"properties": {
					"value": {
						"type": "string",
						"description": "Conditional.<br> The account number value. Maximum length is 9.<br>Example: Your account number"
					}
				},
				"description": "The account number for closing the  shipment.",
				"example": {
					"value": "123456789"
				}
			},
			"CloseDocumentSpecification": {
				"type": "object",
				"properties": {
					"closeDocumentTypes": {
						"type": "array",
						"description": "Specify the type of requested shipment closure documents.",
						"example": [
							"MANIFEST"
						],
						"items": {
							"type": "string",
							"enum": [
								"MANIFEST"
							]
						}
					}
				},
				"description": "Specify characteristics of the document to be returned for this close request."
			},
			"SHPCResponseVO": {
				"type": "object",
				"properties": {
					"transactionId": {
						"type": "string",
						"description": "This element has a unique identifier added in your request, helps you match the request to the reply.<br>Example: XXXX_XXX123XXXXX",
						"example": "624deea6-b709-470c-8c39-4b5511281492"
					},
					"customerTransactionId": {
						"type": "string",
						"description": "This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789",
						"example": "AnyCo_order123456789"
					},
					"output": {
						"$ref": "#/components/schemas/BaseProcessOutputVO"
					}
				}
			},
			"BaseProcessOutputVO": {
				"$ref": "#/components/schemas/EndOfDayCloseOutputVO"
			},
			"EndOfDayCloseOutputVO": {
				"type": "object",
				"properties": {
					"alerts": {
						"type": "array",
						"description": "Specifies the alert details.",
						"items": {
							"$ref": "#/components/schemas/Alert"
						}
					},
					"closeDocuments": {
						"type": "array",
						"description": "\"Documents/reports details displayed upon successful close.\"",
						"items": {
							"$ref": "#/components/schemas/CloseDocument"
						}
					}
				},
				"description": "Specifies the output response details of Ground End of Close request."
			},
			"Alert": {
				"type": "object",
				"properties": {
					"code": {
						"type": "string",
						"description": "Specifies the API alert code.<br>Example: SHIP.RECIPIENT.POSTALCITY.MISMATCH",
						"example": "SHIP.RECIPIENT.POSTALCITY.MISMATCH"
					},
					"alertType": {
						"type": "string",
						"description": "Specifies the API alert type.",
						"example": "NOTE",
						"enum": [
							"NOTE",
							"WARNING"
						]
					},
					"message": {
						"type": "string",
						"description": "Specifies the API alert message.<br>Example: Recipient Postal-City Mismatch.",
						"example": "Recipient Postal-City Mismatch."
					}
				},
				"description": "These are alert details received in the response."
			},
			"CloseDocument": {
				"type": "object",
				"properties": {
					"type": {
						"type": "string",
						"description": "Specifies the report type.",
						"example": "MANIFEST"
					},
					"shippingCycle": {
						"type": "string",
						"description": "Indicates the shipping cycle covered by the content of this document.",
						"example": "1003234523333204"
					},
					"shippingDocumentDisposition": {
						"type": "string",
						"description": "Indicate the used shipping document deposition.",
						"example": "CONFIRMED"
					},
					"accessReference": {
						"type": "string",
						"description": "Specifies the name under which a STORED or DEFFERED document is written."
					},
					"resolution": {
						"type": "integer",
						"description": "Specifies the image resolution in DPI (Dots per inch).",
						"example": 200
					},
					"copiesToPrint": {
						"type": "integer",
						"description": "Indicates the number of copies to print. It can be zero for document with disposition as <i>no content</i> is included.",
						"example": 1
					},
					"parts": {
						"type": "array",
						"description": "Indicates documentation part details.",
						"items": {
							"$ref": "#/components/schemas/ShippingDocumentPart"
						}
					}
				}
			},
			"ShippingDocumentPart": {
				"type": "object",
				"properties": {
					"documentPartSequenceNumber": {
						"type": "integer",
						"description": "Specifies the one-origin position of this part within a document.",
						"example": 1
					},
					"image": {
						"type": "string",
						"description": "Specifies graphic or printer commands for this image.",
						"example": "ICAgICAg."
					}
				},
				"description": "One or more document parts which makeup a single logical document"
			},
			"ErrorResponseVO": {
				"type": "object",
				"properties": {
					"transactionId": {
						"type": "string",
						"description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
						"example": "624deea6-b709-470c-8c39-4b5511281492"
					},
					"customerTransactionId": {
						"type": "string",
						"description": "This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789",
						"example": "AnyCo_order123456789"
					},
					"errors": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CXSError"
						}
					}
				}
			},
			"CXSError": {
				"type": "object",
				"properties": {
					"code": {
						"type": "string",
						"description": "Indicates the error code.<br>Example: AVAILABILITY.SHIP.DATE.INVALID"
					},
					"parameterList": {
						"type": "array",
						"description": "Specifies list of parameters.",
						"items": {
							"$ref": "#/components/schemas/Parameter"
						}
					},
					"message": {
						"type": "string",
						"description": "Indicates the description of alert message.<br>Example: Ship date is invalid."
					}
				},
				"description": "Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter"
			},
			"Parameter": {
				"type": "object",
				"properties": {
					"value": {
						"type": "string",
						"description": "Identifies the error option to be applied."
					},
					"key": {
						"type": "string",
						"description": "Indicates the value associated with the key."
					}
				},
				"description": "List of parameters which indicates the properties of the alert message."
			},
			"ErrorResponseVO401": {
				"type": "object",
				"properties": {
					"transactionId": {
						"type": "string",
						"description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
						"example": "624deea6-b709-470c-8c39-4b5511281492"
					},
					"errors": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CXSError401"
						}
					}
				}
			},
			"CXSError401": {
				"type": "object",
				"properties": {
					"code": {
						"type": "string",
						"description": "Indicates the error code.<br>Example: NOT.AUTHORIZED.ERROR"
					},
					"parameterList": {
						"type": "array",
						"description": "Specifies list of parameters.",
						"items": {
							"$ref": "#/components/schemas/Parameter"
						}
					},
					"message": {
						"description": "Indicates the description of API error alert message.<br>Example: Access token expired. Please modify your request and try again."
					}
				},
				"description": "Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter"
			},
			"ErrorResponseVO403": {
				"type": "object",
				"properties": {
					"transactionId": {
						"type": "string",
						"description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
						"example": "624deea6-b709-470c-8c39-4b5511281492"
					},
					"errors": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CXSError403"
						}
					}
				}
			},
			"CXSError403": {
				"type": "object",
				"properties": {
					"code": {
						"type": "string",
						"description": "Indicates the error code.<br>Example: FORBIDDEN.ERROR"
					},
					"parameterList": {
						"type": "array",
						"description": "Specifies list of parameters.",
						"items": {
							"$ref": "#/components/schemas/Parameter"
						}
					},
					"message": {
						"description": "Indicates the description of API error alert message.<br>Example: We could not authorize your credentials. Please check your permissions and try again"
					}
				},
				"description": "Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter"
			},
			"ErrorResponseVO404": {
				"type": "object",
				"properties": {
					"transactionId": {
						"type": "string",
						"description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
						"example": "624deea6-b709-470c-8c39-4b5511281492"
					},
					"errors": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CXSError404"
						}
					}
				}
			},
			"CXSError404": {
				"type": "object",
				"properties": {
					"code": {
						"type": "string",
						"description": "Indicates the error code.<br>Example: NOT.FOUND.ERROR"
					},
					"parameterList": {
						"type": "array",
						"description": "Specifies list of parameters.",
						"items": {
							"$ref": "#/components/schemas/Parameter"
						}
					},
					"message": {
						"description": "Indicates the description of API error alert message.<br>Example: The resource you requested is no longer available. Please modify your request and try again."
					}
				},
				"description": "Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter"
			},
			"ErrorResponseVO500": {
				"type": "object",
				"properties": {
					"transactionId": {
						"type": "string",
						"description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
						"example": "624deea6-b709-470c-8c39-4b5511281492"
					},
					"customerTransactionId": {
						"type": "string",
						"description": "This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789",
						"example": "AnyCo_order123456789"
					},
					"errors": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CXSError500"
						}
					}
				}
			},
			"CXSError500": {
				"type": "object",
				"properties": {
					"code": {
						"type": "string",
						"description": "Indicates the error code.<br>Example: INTERNAL.SERVER.ERROR"
					},
					"parameterList": {
						"type": "array",
						"description": "Specifies list of parameters.",
						"items": {
							"$ref": "#/components/schemas/Parameter"
						}
					},
					"message": {
						"description": "Indicates the description of API error alert message.<br>Example: We encountered an unexpected error and are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time."
					}
				},
				"description": "Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter"
			},
			"ErrorResponseVO503": {
				"type": "object",
				"properties": {
					"transactionId": {
						"type": "string",
						"description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
						"example": "624deea6-b709-470c-8c39-4b5511281492"
					},
					"errors": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CXSError503"
						}
					}
				}
			},
			"CXSError503": {
				"type": "object",
				"properties": {
					"code": {
						"type": "string",
						"description": "Indicates the error code.<br>Example: SERVICE.UNAVAILABLE.ERROR"
					},
					"parameterList": {
						"type": "array",
						"description": "Specifies list of parameters.",
						"items": {
							"$ref": "#/components/schemas/Parameter"
						}
					},
					"message": {
						"description": "Indicates the description of API error alert message.<br>Example: The service is currently unavailable and we are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time."
					}
				},
				"description": "Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter"
			}
		}
	}
}